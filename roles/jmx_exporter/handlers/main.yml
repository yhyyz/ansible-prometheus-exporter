---
- name: restart namenode
  become: true
  systemd:
    daemon_reload: true
    name: hadoop-hdfs-namenode
    state: restarted
  when:
    - not ansible_check_mode

- name: Wait for namenode port ok"
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    port: "{{ wait_for_port_nn }}"
    delay: 10
    sleep: 3
    timeout: 300
  listen: restart namenode
  when:
    - not ansible_check_mode

- name: restart datanode
  become: true
  systemd:
    daemon_reload: true
    name: hadoop-hdfs-datanode
    state: restarted
  when:
    - not ansible_check_mode

- name: get datanode hadoop version
  shell: "hadoop version |head -1 |awk '{print $2}'|cut -c 1 |awk '{if($1==3) print 9866; else if($1==2) print 50010}'"
  register: __datanode_hadoop_version
  listen: restart datanode

- name: Wait for datanode port ok
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    port: "{{ __datanode_hadoop_version.stdout }}"
    delay: 10
    sleep: 3
    timeout: 60
  listen: restart datanode
  when:
    - not ansible_check_mode

- name: restart resourcemanager
  become: true
  systemd:
    daemon_reload: true
    name: hadoop-yarn-resourcemanager
    state: restarted
  when:
    - not ansible_check_mode

- name: Wait for resourcemanager port ok
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    port: "{{ wait_for_port_rm }}"
    delay: 10
    sleep: 3
    timeout: 60
  listen: restart resourcemanager
  when:
    - not ansible_check_mode

- name: restart nodemanager
  become: true
  systemd:
    daemon_reload: true
    name: hadoop-yarn-nodemanager
    state: restarted
  when:
    - not ansible_check_mode

- name: Wait for nodemanager port  ok
  wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    port: "{{ wait_for_port_nm }}"
    delay: 10
    sleep: 3
    timeout: 60
  listen: restart nodemanager
  when:
    - not ansible_check_mode